# NKeys Authentication Configuration
# Uses Ed25519 public-key signatures for authentication
# No passwords are stored - only public keys

port: 4227

authorization {
  # Default permissions for authenticated users
  default_permissions = {
    publish = "SANDBOX.*"
    subscribe = ["PUBLIC.>", "_INBOX.>"]
  }

  # Permission templates
  ADMIN = {
    publish = ">"
    subscribe = ">"
  }

  REQUESTOR = {
    publish = ["req.a", "req.b"]
    subscribe = "_INBOX.>"
  }

  RESPONDER = {
    subscribe = ["req.a", "req.b"]
    publish = "_INBOX.>"
  }

  # Users authenticated by NKeys
  # The nkey field contains the public key (starts with 'U' for User)
  # Clients must sign a challenge with their private key (seed) to authenticate
  users = [
    # Admin user with full permissions
    {
      nkey: "UDXU4RCSJNZOIQHZNWXHXORDPRTGNJAHAHFRGZNEEJCPQTT2M7NLCNF4"
      permissions: $ADMIN
    }
    
    # Client user with requestor permissions
    {
      nkey: "UAH42UG6PV55WVNPAHKF65J4SJQNWQVNWQP7H2VQWPQVH2SJQNWQVH2S"
      permissions: $REQUESTOR
    }
    
    # Service user with responder permissions
    {
      nkey: "UBFJ4RCSJNZOIQHZNWXHXORDPRTGNJAHAHFRGZNEEJCPQTT2M7NLCNF5"
      permissions: $RESPONDER
    }

    # Other user with default permissions
    {
      nkey: "UCGH5RCSJNZOIQHZNWXHXORDPRTGNJAHAHFRGZNEEJCPQTT2M7NLCNF6"
    }
  ]
}

# Notes:
# - NKeys provide stronger security than password authentication
# - Private keys (seeds) never leave the client
# - Server only stores public keys
# - Each connection requires a fresh signature of a random challenge
# - Immune to replay attacks
# 
# To generate your own NKeys, use the examples/nkeys_utils.go functions
# or run the NKeys demo from the main menu
